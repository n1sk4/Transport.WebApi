name: Release build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '25.3'

      - name: Generate GtfsRealtime.cs
        run: protoc --csharp_out=Services/Generated /Vendor/transit/gtfs-realtime/proto/gtfs-realtime.proto
        shell: bash

      - name: Restore dependencies
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Publish Release
        run: dotnet publish --configuration Release --output ./publish

      - name: Compress Release Artifacts
        if: runner.os == 'Windows'
        run: Compress-Archive -Path ./publish/* -DestinationPath ./release-windows.zip
        shell: pwsh

      - name: Compress Release Artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: zip -r release-${{ runner.os }}.zip ./publish

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ runner.os }}
          path: release-*.zip
